spring:
  application:
    name: gracefully-ugly
  profiles:
    active: dev
    include:
      - aws
  thymeleaf:
    cache: false
    prefix: classpath:/templates/

  jpa:
    open-in-view: true
    properties:
      dialect: org.hibernate.dialect.MySQL8InnoDBDialect
      hibernate:
        format_sql: true
        jdbc:
          batch_size: 50
          order_inserts: true
          order_updates: true
          generate_statistics: true
    hibernate:
      ddl-auto: create-drop
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    #        show-sql: true

  datasource:
    hikari:
      # mysql DBMS 설정 값 (로컬 Docker 환경)
      #      driver-class-name: com.mysql.cj.jdbc.Driver
      #      jdbc-url: jdbc:mysql://localhost:8085/gracefully_ugly
      #      username: root
      #      password: root

      # H2 DBMS 사용 시 설정값
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:mem:testdb
      username: sa
      password:

      # Connection Pool 설정 (HikariCP Fine-Tuning)
      minimum-idle: 1                     # 최소 1개의 예비 Connection 설정
      maximum-pool-size: 5                # 최대 5개의 예비 Connection 설정
      pool-name: MySQLPool                # Connection Pool 이름 설정
      connectionTimeout: 10000            # Connection Timeout 알림 시간 10초 설정
      validationTimeout: 5000
      idleTimeout: 600000

  h2:
    console:
      enabled: true

  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 10MB
      resolve-lazily: true

  jwt:
    secretKey: ThisIsARandomlyGeneratedSecretKeyForHS256AlgorithmAndItIsOver64BytesLong1234

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: 48f99478e44507e05c99dfeee8e1a42a
            client-secret: naeJwIif4LSV4ORAiIlkTng6y01fBwCW
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            client-name: kakao

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id


logging.level:
  root: INFO
  org.hibernate.SQL: debug
  org.springframework.transaction.interceptor: TRACE

server:
  servlet:
    session:
      timeout: 30m